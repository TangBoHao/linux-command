shell概述
shell-命令行解释器

脚本执行方法
1 echo输出命令
echo [选项] [输出内容]
选项：
-e 支持反斜线控制的字符转换
控制字符：\a 输出警告音 \b 退格符 \n换行符 \r回车键 \t制表符 \v垂直制表符 \0nnn 按8进制ascii码表输出字符 \xhh 按16进制ascii码输出字符

1更改权限然后执行
chmod 755 hello.sh
./hello
2用bash直接执行

命令的别名：
显示已有的别名 alias
设置别名: alias [别名]="命令"
(临时生效)

vi ~/.bashrc
#写入环境变量配置文件
source [配置文件]  使配置文件立即生效

unalias 别名
#删除别名

命令生效顺序
第一顺位执行用绝对路径或相对路径执行的命令
第二顺位执行别名
第三顺位执行bash的内部命令
第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令

快捷键：
ctrl+
c 强制终止当前命令
l 清屏
a 光标移动到命令行首
e 光标移动到命令行尾
u 从光标所在的位置删除到行首
z 把命令放入后台
r 在历史命令中搜索


历史命令
history [选项] [历史命令保存文件]
选项：
-c 清空历史命令
-w 把缓存中的历史命令写入历史命令保存文件 ~/.bash_history

历史命令的调用
使用上下箭头调用以前的历史命令
使用"!n"重复执行第n条历史命令
使用"!!"重复执行上一条历史命令
使用"!字符串"重复执行最后一条以该字符串开头的命令




输出重定向
>文件  以覆盖的方式，把正确的命令输出输出到指定的文件或者设备当中
>>文件 以追加的方式

2> 2>> 以对命令的错误输出重定向

正确输出和错误输出同时保存：
命令>文件 2>&1   以覆盖的方式
命令>>文件 2>&1   以追加的方式
命令 &>文件 以覆盖的方式
命令 &>>文件 以追加的方式
命令 &>>文件 以追加的方式
命令>>文件1 2>>文件2 把正确的输出追加到文件1中，把错误的输出追加到文件2中

输入重定向：
wc [选项] [文件名]
选项：
-c 统计字节数
-w 统计单词数
-l 统计行数

管道符：
多命令顺序执行：
命令一；命令二 作用：多个命令顺序执行，命令之间没有逻辑关系
命令一&&命令二 作用：命令一正确执行，则命令二执行。命令一执行不正确，命令二不执行。
命令一||命令二 作用：命令一执行不正确，命令二才执行。命令一正确执行，命令二不会执行



















